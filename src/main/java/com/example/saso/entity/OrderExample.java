package com.example.saso.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class OrderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public OrderExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCateSelectIsNull() {
            addCriterion("cate_select is null");
            return (Criteria) this;
        }

        public Criteria andCateSelectIsNotNull() {
            addCriterion("cate_select is not null");
            return (Criteria) this;
        }

        public Criteria andCateSelectEqualTo(String value) {
            addCriterion("cate_select =", value, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectNotEqualTo(String value) {
            addCriterion("cate_select <>", value, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectGreaterThan(String value) {
            addCriterion("cate_select >", value, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectGreaterThanOrEqualTo(String value) {
            addCriterion("cate_select >=", value, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectLessThan(String value) {
            addCriterion("cate_select <", value, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectLessThanOrEqualTo(String value) {
            addCriterion("cate_select <=", value, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectLike(String value) {
            addCriterion("cate_select like", value, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectNotLike(String value) {
            addCriterion("cate_select not like", value, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectIn(List<String> values) {
            addCriterion("cate_select in", values, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectNotIn(List<String> values) {
            addCriterion("cate_select not in", values, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectBetween(String value1, String value2) {
            addCriterion("cate_select between", value1, value2, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andCateSelectNotBetween(String value1, String value2) {
            addCriterion("cate_select not between", value1, value2, "cateSelect");
            return (Criteria) this;
        }

        public Criteria andNeceTitleIsNull() {
            addCriterion("nece_title is null");
            return (Criteria) this;
        }

        public Criteria andNeceTitleIsNotNull() {
            addCriterion("nece_title is not null");
            return (Criteria) this;
        }

        public Criteria andNeceTitleEqualTo(String value) {
            addCriterion("nece_title =", value, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleNotEqualTo(String value) {
            addCriterion("nece_title <>", value, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleGreaterThan(String value) {
            addCriterion("nece_title >", value, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleGreaterThanOrEqualTo(String value) {
            addCriterion("nece_title >=", value, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleLessThan(String value) {
            addCriterion("nece_title <", value, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleLessThanOrEqualTo(String value) {
            addCriterion("nece_title <=", value, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleLike(String value) {
            addCriterion("nece_title like", value, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleNotLike(String value) {
            addCriterion("nece_title not like", value, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleIn(List<String> values) {
            addCriterion("nece_title in", values, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleNotIn(List<String> values) {
            addCriterion("nece_title not in", values, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleBetween(String value1, String value2) {
            addCriterion("nece_title between", value1, value2, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceTitleNotBetween(String value1, String value2) {
            addCriterion("nece_title not between", value1, value2, "neceTitle");
            return (Criteria) this;
        }

        public Criteria andNeceDetailIsNull() {
            addCriterion("nece_detail is null");
            return (Criteria) this;
        }

        public Criteria andNeceDetailIsNotNull() {
            addCriterion("nece_detail is not null");
            return (Criteria) this;
        }

        public Criteria andNeceDetailEqualTo(String value) {
            addCriterion("nece_detail =", value, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailNotEqualTo(String value) {
            addCriterion("nece_detail <>", value, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailGreaterThan(String value) {
            addCriterion("nece_detail >", value, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailGreaterThanOrEqualTo(String value) {
            addCriterion("nece_detail >=", value, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailLessThan(String value) {
            addCriterion("nece_detail <", value, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailLessThanOrEqualTo(String value) {
            addCriterion("nece_detail <=", value, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailLike(String value) {
            addCriterion("nece_detail like", value, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailNotLike(String value) {
            addCriterion("nece_detail not like", value, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailIn(List<String> values) {
            addCriterion("nece_detail in", values, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailNotIn(List<String> values) {
            addCriterion("nece_detail not in", values, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailBetween(String value1, String value2) {
            addCriterion("nece_detail between", value1, value2, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andNeceDetailNotBetween(String value1, String value2) {
            addCriterion("nece_detail not between", value1, value2, "neceDetail");
            return (Criteria) this;
        }

        public Criteria andDeadlineIsNull() {
            addCriterion("deadline is null");
            return (Criteria) this;
        }

        public Criteria andDeadlineIsNotNull() {
            addCriterion("deadline is not null");
            return (Criteria) this;
        }

        public Criteria andDeadlineEqualTo(Date value) {
            addCriterionForJDBCDate("deadline =", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineNotEqualTo(Date value) {
            addCriterionForJDBCDate("deadline <>", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineGreaterThan(Date value) {
            addCriterionForJDBCDate("deadline >", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("deadline >=", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineLessThan(Date value) {
            addCriterionForJDBCDate("deadline <", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("deadline <=", value, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineIn(List<Date> values) {
            addCriterionForJDBCDate("deadline in", values, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineNotIn(List<Date> values) {
            addCriterionForJDBCDate("deadline not in", values, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("deadline between", value1, value2, "deadline");
            return (Criteria) this;
        }

        public Criteria andDeadlineNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("deadline not between", value1, value2, "deadline");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNull() {
            addCriterion("phone is null");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNotNull() {
            addCriterion("phone is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneEqualTo(String value) {
            addCriterion("phone =", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotEqualTo(String value) {
            addCriterion("phone <>", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThan(String value) {
            addCriterion("phone >", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("phone >=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThan(String value) {
            addCriterion("phone <", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThanOrEqualTo(String value) {
            addCriterion("phone <=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLike(String value) {
            addCriterion("phone like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotLike(String value) {
            addCriterion("phone not like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneIn(List<String> values) {
            addCriterion("phone in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotIn(List<String> values) {
            addCriterion("phone not in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneBetween(String value1, String value2) {
            addCriterion("phone between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotBetween(String value1, String value2) {
            addCriterion("phone not between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andRewardIsNull() {
            addCriterion("reward is null");
            return (Criteria) this;
        }

        public Criteria andRewardIsNotNull() {
            addCriterion("reward is not null");
            return (Criteria) this;
        }

        public Criteria andRewardEqualTo(Integer value) {
            addCriterion("reward =", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardNotEqualTo(Integer value) {
            addCriterion("reward <>", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardGreaterThan(Integer value) {
            addCriterion("reward >", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardGreaterThanOrEqualTo(Integer value) {
            addCriterion("reward >=", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardLessThan(Integer value) {
            addCriterion("reward <", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardLessThanOrEqualTo(Integer value) {
            addCriterion("reward <=", value, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardIn(List<Integer> values) {
            addCriterion("reward in", values, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardNotIn(List<Integer> values) {
            addCriterion("reward not in", values, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardBetween(Integer value1, Integer value2) {
            addCriterion("reward between", value1, value2, "reward");
            return (Criteria) this;
        }

        public Criteria andRewardNotBetween(Integer value1, Integer value2) {
            addCriterion("reward not between", value1, value2, "reward");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order
     *
     * @mbg.generated do_not_delete_during_merge Thu Aug 01 17:06:48 CST 2024
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table order
     *
     * @mbg.generated Thu Aug 01 17:06:48 CST 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}